{"changed":false,"filter":false,"title":"helpers.py","tooltip":"/pset6/sentiments/helpers.py","value":"import html\nimport os\nimport plotly\nimport socket\n\nfrom twython import Twython\nfrom twython import TwythonAuthError, TwythonError, TwythonRateLimitError\n\ndef chart(positive, negative, neutral):\n    \"\"\"Return a pie chart for specified sentiments as HTML.\"\"\"\n\n    # offline plot\n    # https://plot.ly/python/pie-charts/\n    # https://plot.ly/python/reference/#pie\n    figure = {\n        \"data\": [\n            {\n                \"labels\": [\"positive\", \"negative\", \"neutral\"],\n                \"hoverinfo\": \"none\",\n                \"marker\": {\n                    \"colors\": [\n                        \"rgb(0,255,00)\",\n                        \"rgb(255,0,0)\",\n                        \"rgb(255,255,0)\"\n                    ]\n                },\n                \"type\": \"pie\",\n                \"values\": [positive, negative, neutral]\n            }\n        ],\n        \"layout\": {\n            \"showlegend\": True\n            }\n    }\n    return plotly.offline.plot(figure, output_type=\"div\", show_link=False, link_text=False)\n\ndef get_user_timeline(screen_name, count=200):\n    \"\"\"Return list of most recent tweets posted by screen_name.\"\"\"\n\n    # ensure count is valid\n    if count < 1 or count > 200:\n        raise RuntimeError(\"invalid count\")\n\n    # ensure environment variables are set\n    if not os.environ.get(\"API_KEY\"):\n        raise RuntimeError(\"API_KEY not set\")\n    if not os.environ.get(\"API_SECRET\"):\n        raise RuntimeError(\"API_SECRET not set\")\n\n    # get screen_name's most recent tweets\n    # https://dev.twitter.com/rest/reference/get/users/lookup\n    # https://dev.twitter.com/rest/reference/get/statuses/user_timeline\n    # https://github.com/ryanmcgrath/twython/blob/master/twython/endpoints.py\n    try:\n        twitter = Twython(os.environ.get(\"API_KEY\"), os.environ.get(\"API_SECRET\"))\n        user = twitter.lookup_user(screen_name=screen_name)\n        if user[0][\"protected\"]:\n            return None\n        tweets = twitter.get_user_timeline(screen_name=screen_name, count=count)\n        return [html.unescape(tweet[\"text\"].replace(\"\\n\", \" \")) for tweet in tweets]\n    except TwythonAuthError:\n        raise RuntimeError(\"invalid API_KEY and/or API_SECRET\") from None\n    except TwythonRateLimitError:\n        raise RuntimeError(\"you've hit a rate limit\") from None\n    except TwythonError:\n        return None\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":285,"scrollleft":0,"selection":{"start":{"row":58,"column":80},"end":{"row":58,"column":80},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":19,"state":"start","mode":"ace/mode/python"}},"timestamp":1489103997598}